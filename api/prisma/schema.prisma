// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int            @id @default(autoincrement())
  username   String         @unique
  email      String         @unique
  password   String
  name       String
  coverPic   String?
  profilePic String?
  city       String?
  website    String?
  Post       Post[]
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
  Comment    Comment[]
  Story      Story[]
  Follower   Relationship[] @relation("followerUser")
  FollowedBy Relationship[] @relation("followedUser")
  Like       Like[]
}

model Post {
  id        Int       @id @default(autoincrement())
  desc      String?
  img       String?
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Comment   Comment[]
  Like      Like[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  desc      String?
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Story {
  id        Int      @id @default(autoincrement())
  img       String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Relationship {
  id             Int  @id @default(autoincrement())
  followerUser   User @relation("followerUser", fields: [followerUserId], references: [id])
  followerUserId Int
  followedUser   User @relation("followedUser", fields: [followedUserId], references: [id])
  followedUserId Int

  @@unique([followerUserId, followedUserId])
}

model Like {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int
  post   Post @relation(fields: [postId], references: [id])
  postId Int

  @@unique([userId, postId])
}
